apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion compile_sdk
    defaultConfig {
        applicationId "com.example.mssa"
        minSdkVersion min_sdk
        targetSdkVersion target_sdk
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'

        exclude 'META-INF/kotlinx-io.kotlin_module'
        exclude 'META-INF/atomicfu.kotlin_module'
        exclude 'META-INF/kotlinx-coroutines-io.kotlin_module'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled = true
    }

    // https://medium.com/@joongwon/%EC%BD%94%ED%8B%80%EB%A6%B0-kotlin-with-dagger2-11fe36126dd6
    kapt {
        generateStubs = true
        correctErrorTypes = true
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'


    implementation "androidx.appcompat:appcompat:$appcompat"
    implementation "androidx.core:core-ktx:$core_ktx"
    implementation "androidx.constraintlayout:constraintlayout:$constraint"
    implementation "com.google.android.material:material:$material"
    implementation "androidx.recyclerview:recyclerview:$recycler"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle"
    kapt "androidx.lifecycle:lifecycle-common-java8:$lifecycle"
    implementation 'androidx.preference:preference:1.1.0'

    implementation "androidx.multidex:multidex:$multidex"
    implementation "androidx.room:room-runtime:$room"
    kapt "androidx.room:room-compiler:$room"
    implementation "androidx.room:room-rxjava2:$room"

    implementation "com.google.dagger:dagger:$dagger2"
    implementation "com.google.dagger:dagger-android-support:$dagger2" // if you use the support libraries
    kapt "com.google.dagger:dagger-compiler:$dagger2"
    kapt "com.google.dagger:dagger-android-processor:$dagger2"  // 애는 버전이 낮음

    // AssistedInject : https://github.com/square/AssistedInject
    compileOnly 'com.squareup.inject:assisted-inject-annotations-dagger2:0.5.0'
    kapt 'com.squareup.inject:assisted-inject-processor-dagger2:0.5.0'
    implementation "org.slf4j:slf4j-api:$slf4j"
    implementation "com.github.tony19:logback-android:$logback"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:$jackson"

    implementation "com.squareup.okhttp3:okhttp:$okhttp"
    implementation "com.squareup.okhttp3:logging-interceptor:3.13.1"
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava2:2.4.0"
    implementation "com.squareup.retrofit2:converter-jackson:2.4.0"
    implementation "com.squareup.retrofit2:converter-scalars:2.1.0"

    implementation "com.github.bumptech.glide:glide:$glide"
    kapt "com.github.bumptech.glide:compiler:$glide"

    implementation "io.reactivex.rxjava2:rxjava:$rxjava"
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid"
    implementation "io.reactivex.rxjava2:rxkotlin:$rxkotlin"

    implementation project(path: ':brigitte')
}
